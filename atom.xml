<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Soke的博客</title>
  
  
  <link href="http://soke-mile.github.io/atom.xml" rel="self"/>
  
  <link href="http://soke-mile.github.io/"/>
  <updated>2023-01-02T13:48:12.174Z</updated>
  <id>http://soke-mile.github.io/</id>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>C語言教程（程序結構篇）</title>
    <link href="http://soke-mile.github.io/2022/12/30/C%E8%AF%AD%E8%A8%80%E6%95%99%E7%A8%8B%EF%BC%88%E7%A8%8B%E5%BA%8F%E7%BB%93%E6%9E%84%E4%B8%8E%E5%9F%BA%E6%9C%AC%E8%AF%AD%E6%B3%95/"/>
    <id>http://soke-mile.github.io/2022/12/30/C%E8%AF%AD%E8%A8%80%E6%95%99%E7%A8%8B%EF%BC%88%E7%A8%8B%E5%BA%8F%E7%BB%93%E6%9E%84%E4%B8%8E%E5%9F%BA%E6%9C%AC%E8%AF%AD%E6%B3%95/</id>
    <published>2022-12-30T10:09:06.000Z</published>
    <updated>2023-01-02T13:48:12.174Z</updated>
    
    <content type="html"><![CDATA[<h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><blockquote><p>今天突發奇想，決定開始不定期的寫C語言一系列教程，目的既是為了我給自己寫一點筆記，也是給各位提供一個好的學習路徑，沒有什麽好說的了，直接上教程。</p></blockquote><h1 id="學習C語言須知"><a href="#學習C語言須知" class="headerlink" title="學習C語言須知"></a>學習C語言須知</h1><p>在學習C語言之前，最好要有一些編程基礎，建議從來沒有學過代碼編程的可以先去學習Python，之後再來學習C語言，這樣會更容易理解，有助於學習。</p><h1 id="C語言第一篇——了解程序結構"><a href="#C語言第一篇——了解程序結構" class="headerlink" title="C語言第一篇——了解程序結構"></a>C語言第一篇——了解程序結構</h1><blockquote><p>註：在這裏不在過多講解C的編譯環境設置，博主所用的系統為Linux系統，內置有C的環境，如果你是Windows用戶，網上安裝C編譯環境的教程很多，可以自己去網上找。</p></blockquote><h3 id="程序結構"><a href="#程序結構" class="headerlink" title="程序結構"></a>程序結構</h3><p>某些編程語言都會有它特定的程序結構，如C的平常的程序結構由預處理器指令、主函數、返回表達式、註釋（可以寫入也可以不用寫入）。如下面給出一個C程序，輸入文本”hello world”：</p><pre class="line-numbers language-C" data-language="C"><code class="language-C">#include &lt;stdio.h&gt;         // 預處理器指令int main()                // 主要函數，主要的程序在這個函數內執行，由」{「」}「等括號組成{printf("hello world");        // 输出函数return 0;              // 返回表達式}<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>這就是C的程序結構，至於”#include””&lt;stdio.h&gt;等這些東西先不要掌握它是什麽，以後會提到，只要在編寫代碼的時候把它記住就可以了。</p><blockquote><p>註：Linux下想要執行C程序，需要&gt;&gt;文本編輯器&gt;&gt;輸入C語言代碼&gt;&gt;保存，後綴設為.c&gt;&gt;打開終端&gt;&gt;輸入進入保存剛剛創建的C語言文件的文件目錄&gt;&gt;輸入命令gcc 文件名.c&gt;&gt;這時生成了一個名為a.out的文件&gt;&gt;在終端輸入命令./a.out即可執行編寫好的C程序。</p></blockquote>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h1&gt;&lt;blockquote&gt;
&lt;p&gt;今天突發奇想，決定開始不定期的寫C語言一系列教程，目的既是為了我給自己寫一點筆記，也是給各位提供一個好的學習路徑，</summary>
      
    
    
    
    <category term="C语言" scheme="http://soke-mile.github.io/categories/C%E8%AF%AD%E8%A8%80/"/>
    
    
    <category term="编程" scheme="http://soke-mile.github.io/tags/%E7%BC%96%E7%A8%8B/"/>
    
  </entry>
  
  <entry>
    <title>Kali Linux nmap掃描（Kali學習筆記）</title>
    <link href="http://soke-mile.github.io/2022/12/28/Kali-Linux-nmap%E6%89%AB%E6%8F%8F%EF%BC%88Kali%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%EF%BC%89/"/>
    <id>http://soke-mile.github.io/2022/12/28/Kali-Linux-nmap%E6%89%AB%E6%8F%8F%EF%BC%88Kali%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%EF%BC%89/</id>
    <published>2022-12-28T05:08:42.000Z</published>
    <updated>2023-01-02T13:49:11.829Z</updated>
    
    <content type="html"><![CDATA[<h1 id="滲透入侵第一步——信息收集"><a href="#滲透入侵第一步——信息收集" class="headerlink" title="滲透入侵第一步——信息收集"></a>滲透入侵第一步——信息收集</h1><p>這是我第一次在hexo發布有關技術的文章，還望多多關照，不喜勿噴。要想做好滲透，收集信息這一步可以算是所有步驟中最重要的一個步驟，信息收集的好，對之後各種工作會起到非常大的作用。</p><h2 id="nmap掃描工具的使用"><a href="#nmap掃描工具的使用" class="headerlink" title="nmap掃描工具的使用"></a>nmap掃描工具的使用</h2><p>nmap相比大家都很了解，這裏我給出一些nmap的常用命令。如果想要了解更多，可以去nmap官網查看更多信息：<a href="https://nmap.org/">https://nmap.org/</a>   </p><h3 id="簡單掃描"><a href="#簡單掃描" class="headerlink" title="簡單掃描"></a>簡單掃描</h3><p>在Kali Linux的終端輸入以下命令：   </p><pre><code class="bash">nmap 目標主機IP或網站URL</code></pre><p>這種掃描方式不添加任何參數，得出的也只是基本的信息。   </p><h3 id="掃描主機開放的端口"><a href="#掃描主機開放的端口" class="headerlink" title="掃描主機開放的端口"></a>掃描主機開放的端口</h3><p>輸入命令：   </p><pre><code class="Bash">nmap -sS 主機IP或網站URL</code></pre><p>這種掃描可能有些費時，不過他對於發現漏洞有很大的意義。</p><h3 id="判斷主機操作系統"><a href="#判斷主機操作系統" class="headerlink" title="判斷主機操作系統"></a>判斷主機操作系統</h3><p>输入命令：   </p><pre><code class="Bash">nmap -O 主机IP或网站URL</code></pre><p>可能是因为Windows安全好的原因，判断出来的操作系统有猜测，因为本人亲自实验过。其實還有另一種方法使我們知道目標主機的操作系統，可以在終端輸入命令：   </p><pre><code class="Bash">ping 目標主機IP或網站URL</code></pre><p>可以根據得出的TTL的值來判斷是何系統。這種方法要比第一種節約時間，但得出的信息沒有第一種豐富，總之各有其特點。</p><h3 id="掃描常見漏洞"><a href="#掃描常見漏洞" class="headerlink" title="掃描常見漏洞"></a>掃描常見漏洞</h3><p>輸入命令：   </p><pre><code class="Bash">nmap --script=vuln 目標主機IP或網站URL</code></pre><p>這裏具體的漏洞展示我好像忘了上面的單詞是什麽……，自己把輸出的內容去百度翻譯翻譯一下吧。<br>再次強調一下，本篇展示的只是一些常用的命令，更多命令可以去官網：<a href="http://nmap.org/">http://nmap.org</a>查看。 記得送博主一杯~~~</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;滲透入侵第一步——信息收集&quot;&gt;&lt;a href=&quot;#滲透入侵第一步——信息收集&quot; class=&quot;headerlink&quot; title=&quot;滲透入侵第一步——信息收集&quot;&gt;&lt;/a&gt;滲透入侵第一步——信息收集&lt;/h1&gt;&lt;p&gt;這是我第一次在hexo發布有關技術的文章，還望多多關</summary>
      
    
    
    
    <category term="網絡安全" scheme="http://soke-mile.github.io/categories/%E7%B6%B2%E7%B5%A1%E5%AE%89%E5%85%A8/"/>
    
    
    <category term="滲透黑客" scheme="http://soke-mile.github.io/tags/%E6%BB%B2%E9%80%8F%E9%BB%91%E5%AE%A2/"/>
    
    <category term="Kali Linux" scheme="http://soke-mile.github.io/tags/Kali-Linux/"/>
    
  </entry>
  
  <entry>
    <title>Hello World</title>
    <link href="http://soke-mile.github.io/2022/12/25/hello-world/"/>
    <id>http://soke-mile.github.io/2022/12/25/hello-world/</id>
    <published>2022-12-25T11:47:29.360Z</published>
    <updated>2023-01-02T13:48:45.565Z</updated>
    
    <content type="html"><![CDATA[<h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p>花費了兩天的時間，終於把博客算是搭建成了，雖然在過程中還是遇到了不少的問題，但怎麽說，成功就算是好的了。以前也整過博客網站，但感覺做的不是很好，況且功能還單一，自己在寫代碼很費勁，所以自己為解決上述問題，搭建hexo博客。  </p><h1 id="一句hello-world開啟前程"><a href="#一句hello-world開啟前程" class="headerlink" title="一句hello world開啟前程"></a>一句hello world開啟前程</h1><p>hello world，開啟我的新博客之旅，新的技術，新的探索在等著我還有屏幕前的你，就讓這hello world作為最完美的開頭曲吧！</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h1&gt;&lt;p&gt;花費了兩天的時間，終於把博客算是搭建成了，雖然在過程中還是遇到了不少的問題，但怎麽說，成功就算是好的了。以前也整過博客網站，但感覺做的不是很</summary>
      
    
    
    
    
    <category term="hello world" scheme="http://soke-mile.github.io/tags/hello-world/"/>
    
  </entry>
  
</feed>
